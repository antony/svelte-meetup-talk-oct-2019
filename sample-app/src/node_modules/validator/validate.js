import { writable } from 'svelte/store'

export default function (...validators) {
  const { subscribe, set } = writable({ dirty: false, valid: false, message: null })

  function action (node) {
    function validate (dirty = true) {
      if (!validators || validators.length === 0) {
        set({ dirty, valid: true })
        return
      }

      const failing = validators.find(v => v(node.value) !== true)

      set({
        dirty,
        valid: !failing,
        message: failing && failing(node.value)
      })
    }

    node.addEventListener('input', validate)

    validate(false)

    return {
      destroy: () => {
        node.removeEventListener('input', validate)
      }
    }
  }

  return [ { subscribe }, action ]
}